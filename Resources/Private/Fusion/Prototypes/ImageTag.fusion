prototype(Jonnitto.Image:ImageTag) < prototype(Fusion:Value) {
	asset = false
	alternativeText = false
	title = false
	maximumWidth = ${Configuration.setting('Jonnitto.Image.maximumWidth')}
	maximumHeight = ${Configuration.setting('Jonnitto.Image.maximumHeight')}
	width = ${Configuration.setting('Jonnitto.Image.width')}
	height = ${Configuration.setting('Jonnitto.Image.height')}
	allowCropping = ${Configuration.setting('Jonnitto.Image.allowCropping')}
	allowUpScaling = ${Configuration.setting('Jonnitto.Image.allowUpScaling')}

	@context {
		asset = ${this.asset}
		alternativeText = ${this.alternativeText}
		title = ${this.title}
		maximumWidth = ${this.maximumWidth}
		maximumHeight = ${this.maximumHeight}
		width = ${this.width}
		height = ${this.height}
		allowCropping = ${this.allowCropping}
		allowUpScaling = ${this.allowUpScaling}
	}

	prototype(ImageUri) {
		multiplicator = 1
		asset = ${asset}
		allowCropping = ${allowCropping}
		allowUpScaling = ${allowUpScaling}
		maximumWidth = ${(node.context.inBackend && !allowCropping && !allowUpScaling) || width ? false : maximumWidth * this.multiplicator}
		maximumHeight = ${(node.context.inBackend && !allowCropping && !allowUpScaling) || height ? false : maximumHeight * this.multiplicator}
		width = ${(node.context.inBackend && !allowCropping && !allowUpScaling) || !width ? false : width  * this.multiplicator}
		height = ${(node.context.inBackend && !allowCropping && !allowUpScaling) || !height ? false : height  * this.multiplicator}
	}

	value = Fusion:Case {
		svg {
			condition = ${(asset && Configuration.setting('Jonnitto.Image.inlineSVG') && asset.resource.fileextension == 'svg') ? true : false}
			renderer = Jonnitto.Image:FileContent {
				resource = ${asset.resource}
			}
		}
		img {
			condition = ${asset ? true : false}
			renderer = Fusion:Tag {
				ratio = Fusion:Case {
					roundValue = ${Math.min(Math.max(Math.round(asset.width / 25), 1), 50)}
					@context {
						width = ${Math.ceil(asset.width / this.roundValue)}
						height = ${Math.ceil(asset.height / this.roundValue)}
					}
					@ignoreProperties = ${['roundValue']}

					isSquare {
						condition = ${width == height}
						renderer = ${'-square'}
					}
					isLandscape {
						condition = ${width > height}
						renderer = '-landscape'
					}
					isPortrait {
						condition = ${width < height}
						renderer = '-portrait'
					}
				}
				@context.ratio = ${this.ratio}

				tagName = 'img'
				attributes {
					alt = ${alternativeText ? alternativeText : false}
					title = ${title ? title : false}
					class = Fusion:RawArray {
						type = 'image'
						ratio = ${ratio}
					}
					src = ImageUri
					srcset = Fusion:Array {
						@if.isLive = ${node.context.live}
						prototype(ImageUri) {
							@process.addResolution = ${',' + value + ' ' + this.multiplicator + 'x'}
							@if.hasEnoughPixel = ${asset.width > ((width ? width : maximumWidth) * (this.multiplicator - 1))}
						}
						1 = ImageUri {
							@process.addResolution = ${value + ' 1x'}
							@if.hasEnoughPixel = true
						}
						2 = ImageUri {
							multiplicator = 2
						}
					}
				}
			}
		}
		inBackend {
			condition = ${node.context.inBackend}
			renderer = Fusion:Tag {
				tagName = 'img'
				attributes {
					class = 'neos-handle'
					style = 'max-height:200px;width:auto;display:inline-block;height:100%;'
					src = Fusion:ResourceUri {
						path = 'resource://Jonnitto.Image/Public/dummy-image.svg'
					}
				}
			}
		}
	}
}
